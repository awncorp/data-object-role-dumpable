
=encoding utf8

=head1 NAME

Data::Object::Role::Dumpable

=cut

=head1 ABSTRACT

Dumpable Role for Perl 5

=cut

=head1 SYNOPSIS

  package Example;

  use Moo;

  with 'Data::Object::Role::Dumpable';

  package main;

  my $example = Example->new;

  # $example->dump

=cut

=head1 DESCRIPTION

This package provides methods for dumping the object and underlying value.

=cut

=head1 METHODS

This package implements the following methods:

=cut

=head2 dump

  dump() : Str

The dump method returns a string representation of the underlying data.

=over 4

=item dump example #1

  # given: synopsis

  my $dumped = $example->dump;

=back

=cut

=head2 pretty_dump

  pretty_dump() : Str

The pretty_dump method returns a string representation of the underlying data
that is human-readable and useful for debugging.

=over 4

=item pretty_dump example #1

  # given: synopsis

  my $dumped = $example->pretty_dump;

=back

=cut

=head2 pretty_print

  pretty_print(Any @args) : Int

The pretty_print method prints a stringified human-readable representation of
the underlying data.

=over 4

=item pretty_print example #1

  # given: synopsis

  my $printed = $example->pretty_print;

=back

=over 4

=item pretty_print example #2

  # given: synopsis

  my $printed = $example->pretty_print({1..4});

=back

=cut

=head2 pretty_say

  pretty_say(Any @args) : Int

The pretty_say method prints a stringified human-readable representation of the
underlying data, with a trailing newline.

=over 4

=item pretty_say example #1

  # given: synopsis

  my $printed = $example->pretty_say;

=back

=over 4

=item pretty_say example #2

  # given: synopsis

  my $printed = $example->pretty_say({1..4});

=back

=cut

=head2 print

  print(Any @args) : Int

The print method prints a stringified representation of the underlying data.

=over 4

=item print example #1

  # given: synopsis

  my $printed = $example->print;

=back

=over 4

=item print example #2

  # given: synopsis

  my $printed = $example->print({1..4});

=back

=cut

=head2 say

  say(Any @args) : Int

The say method prints a stringified representation of the underlying data, with
a trailing newline.

=over 4

=item say example #1

  # given: synopsis

  my $printed = $example->say;

=back

=over 4

=item say example #2

  # given: synopsis

  my $printed = $example->say({1..4});

=back

=cut

=head1 AUTHOR

Al Newkirk, C<awncorp@cpan.org>

=head1 LICENSE

Copyright (C) 2011-2019, Al Newkirk, et al.

This is free software; you can redistribute it and/or modify it under the terms
of the The Apache License, Version 2.0, as elucidated in the L<"license
file"|https://github.com/iamalnewkirk/foobar/blob/master/LICENSE>.

=head1 PROJECT

L<Wiki|https://github.com/iamalnewkirk/foobar/wiki>

L<Project|https://github.com/iamalnewkirk/foobar>

L<Initiatives|https://github.com/iamalnewkirk/foobar/projects>

L<Milestones|https://github.com/iamalnewkirk/foobar/milestones>

L<Contributing|https://github.com/iamalnewkirk/foobar/blob/master/CONTRIBUTE.md>

L<Issues|https://github.com/iamalnewkirk/foobar/issues>

=cut
